#user  nobody;

#默认为1，一般情况下不用修改，考虑到实际情况，可以修改这个数值，以提高性能，官方的建议是修改成CPU的内核数
#多开几个，可以减少机器io带来的影响，据实践表明，nginx的这个参数在一般情况下开4个或8个就可以了，再往上开的话优化不太大
#如果网站没有出现io性能问题，最好不要修改，采用默认的1即可
worker_processes 1;

#error_log  /backup/logs/nginx/nginx_error.log  crit;

#pid        /usr/local/nginx/logs/nginx.pid;


events 
{
    #使用epoll模型
    use epoll;
    #单个进程允许的客户端最大连接数
    worker_connections 51200;
}

http 
{
    include       mime.types;
    default_type  application/octet-stream;
    log_format  access  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" $http_x_forwarded_for';

    charset utf-8,gbk;

    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 50M;

    sendfile on;
    tcp_nopush     on;
    server_tokens off;

    keepalive_timeout 60;

    tcp_nodelay on;


    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;

    fastcgi_buffer_size 128k;
    fastcgi_buffers 8 128k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;

    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    #gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types       text/plain application/x-javascript application/javascript text/css application/xml text/javascript;
    #gzip_vary on;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";
    #limit_zone  crawler  $binary_remote_addr  10m;


    map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
    }

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
